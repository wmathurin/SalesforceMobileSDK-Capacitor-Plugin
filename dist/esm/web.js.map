{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,gBACb,SAAQ,SAAS;IAGb,KAAK,CAAC,OAAO;QACf,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,OAAO,CAAC;gBACR,UAAU,EAAE,aAAa;gBACzB,OAAO,EAAE,UAAU;gBACnB,UAAU,EAAE,OAAO;gBACnB,qBAAqB,EAAE,EAAE;gBACzB,UAAU,EAAE,EAAE;aACb,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACD,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,OAA4B;QACzD,OAAO,CAAC,GAAG,CAAC,+BAA+B,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QAC9D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,OAAO,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACD,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,OAA4B;QACvD,OAAO,CAAC,GAAG,CAAC,6BAA6B,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QAC5D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,OAAO,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACD,CAAC;CACJ;AAED,MAAM,OAAO,0BACb,SAAQ,SAAS;IAGb,KAAK,CAAC,WAAW,CAAC,OAAoB;QACxC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,OAAO,CAAC;gBACP,IAAI,EAAE,gBAAgB,OAAO,CAAC,IAAI,EAAE;aACpC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { RestRequest, RestResponse, SDKInfo, SDKInfoPlugin, SalesforceNetworkPlugin } from './definitions';\n\nexport class SDKInfoPluginWeb\nextends WebPlugin\nimplements SDKInfoPlugin\n{\n    async getInfo(): Promise<SDKInfo> {\n\t\tconsole.log(\"Called getInfo\");\n\t\treturn new Promise((resolve) => {\n\t\t\tresolve({\n\t\t\tsdkVersion: \"Sdk-Version\",\n\t\t\tappName: \"App-Name\",\n\t\t\tappVersion: \"1.0.0\",\n\t\t\tforcePluginsAvailable: [],\n\t\t\tbootConfig: \"\"\n\t\t\t});\n\t\t});\n    }\n    \n    async unregisterAppFeature(options: { feature: string }): Promise<void> {\n\t\tconsole.log(`Called unregisterAppFeature ${options.feature}`);\n\t\treturn new Promise((resolve) => {\n\t\t\tresolve();\n\t\t});\n    }\t\n\n    async registerAppFeature(options: { feature: string }): Promise<void> {\n\t\tconsole.log(`Called registerAppFeature ${options.feature}`);\n\t\treturn new Promise((resolve) => {\n\t\t\tresolve();\n\t\t});\n    }\n}\n\nexport class SalesforceNetworkPluginWeb\nextends WebPlugin\nimplements SalesforceNetworkPlugin\n{\n    async sendRequest(options: RestRequest): Promise<RestResponse> {\n\t\tconsole.log(\"Called sendRequest\");\n\t\treturn new Promise((resolve) => {\n\t\t\tresolve({\n\t\t\t\tbody: `response for ${options.path}`\n\t\t\t});\n\t\t});\n\t}\n}\n"]}